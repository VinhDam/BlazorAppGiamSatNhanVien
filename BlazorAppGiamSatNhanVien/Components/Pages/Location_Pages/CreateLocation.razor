@inject ILocationRepository _locationRepository
@inject IJSRuntime _JS

<div class="modal fade" id="bsModalCreateLocation" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg  modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="exampleModalLabel">Create Location Form</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <EditForm Model="Location" FormName="ProductUpsertForm" OnValidSubmit="CreateLocationConfirm">
                    <DataAnnotationsValidator />
                    <div class="px-3">
                        <div class="py-2 col-12">
                            <label for="Code">Mã số</label>
                            <InputText @bind-Value="Location.Code" class="form-control" id="Code" />
                            <ValidationMessage For="@(() => Location.Code)" />
                        </div>
                        <div class="py-2 col-12">
                            <label for="Name">Tên vị trí</label>
                            <InputText @bind-Value="Location.Name" class="form-control" id="Name"/>
                            <ValidationMessage For="@(() => Location.Name)" />
                        </div>
                        <div class="py-2 col-12">
                            <label for="Description">Mô tả</label>
                            <InputText @bind-Value="Location.Description" class="form-control" id="Description" />
                            <ValidationMessage For="@(() => Location.Description)" />
                        </div>
                        <div class="py-2 d-flex gap-3">
                            <label for="Status">Hoạt động</label>
                            <InputCheckbox @bind-Value="Location.Status" class="form-check" id="Status" />
                            <ValidationMessage For="@(() => Location.Status)" />
                        </div>
                    </div>
                    <div class="modal-footer gap-2">
                        <MudButton ButtonType="ButtonType.Submit" Color="Color.Primary" Variant="Variant.Filled" OnClick="CreateLocationConfirm">Create</MudButton>
                        <MudButton ButtonType="ButtonType.Button" Color="Color.Warning" Variant="Variant.Filled">Cancel</MudButton>
                    </div>
                </EditForm>
            </div>

        </div>
    </div>
</div>

@code {
    [Parameter]
    public Location Location { get; set; } = new Location();
    [Parameter]
    public EventCallback LoadPage { get; set; }

    public async Task CreateLocationConfirm()
    {
        await _locationRepository.CreateAsync(Location);
        Location = new Location();
        await _JS.InvokeVoidAsync("HideCreateLocationModal");
        await _JS.ToastrSuccess("Product Created Successfully");
        await LoadPage.InvokeAsync();
    }
}